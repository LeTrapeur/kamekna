#ifndef PROJECTILE_H
#define PROJECTILE_H

#include <Entity.hpp>
#include <ResourceHolder.hpp>

class Projectile : public Entity
{
    public:
        enum Type
        {
            AlliedBullet,
            EnemyBullet,
            TypeCount
        };

    public:
                                        Projectile(Type type, const TextureHolder& textures, b2World& world, int damage);

        virtual unsigned int            getCategory() const;
        int                             getMaxSpeed() const;
        int                             getDamage() const;
        int                             getMinVelocityDamage() const;

        virtual bool                    isDestroyed() const;

    private:
        virtual void                    updateCurrent(sf::Time dt, CommandQueue& commands);
        virtual void                    drawCurrent(sf::RenderTarget& target, sf::RenderStates states) const;
        static b2Body*                  createBody(b2World& world);

    private:
        Type                            m_type;
        sf::Sprite                      m_sprite;
        int                             m_damage;
        sf:: Time                       m_timeToLive;

};

#endif // PROJECTILE_H
